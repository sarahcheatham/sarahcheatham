{"version":3,"sources":["images/gravatar.JPG","images/arraynge.png","images/method.png","images/todolist.png","components/ContactInfo/ContactInfo.js","components/Bio/Bio.js","components/Projects/ProjectsHeader.js","components/Projects/Arraynge.js","components/Projects/JSCheats.js","components/Projects/TodoList.js","components/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ContactInfo","react_default","a","createElement","className","id","React","Component","Bio","src","Sarah","alt","components_ContactInfo_ContactInfo","href","Icon_default","size","name","fill","height","width","role","viewBox","xmlns","d","ProjectHeader","Arraynge","arraynge","JSCheats","method","TodoList","todolist","Projects","Projects_Arraynge","Projects_JSCheats","Projects_TodoList","App","components_Bio_Bio","ProjectsHeader","components_Projects_Projects","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03254a70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gravatar.2a741a87.JPG\";","module.exports = __webpack_public_path__ + \"static/media/arraynge.50a675f1.png\";","module.exports = __webpack_public_path__ + \"static/media/method.f65adea0.png\";","module.exports = __webpack_public_path__ + \"static/media/todolist.d7a449b0.png\";","import React from 'react';\nimport \"./ContactInfo.css\";\n\nclass ContactInfo extends React.Component{\n    render(){\n        return (\n            <div className=\"contactinfo\">\n                <h1 id=\"contactinfoheader\">Contact Info:</h1>\n                <h2 id=\"resume\" className=\"linkHeader\">PDF Resume</h2>\n                <h2 id=\"email\">Email: sarah.cheatham14@gmail.com</h2>\n                <h2 id=\"phone\">Phone: (281) 961 - 6790</h2>\n                {/* <h2 className=\"linkHeader\">\n                    <a href=\"https://github.com/sarahcheatham\">sarah cheatham</a>\n                </h2> */}\n            </div>\n        )\n    }\n\n}\n\nexport default ContactInfo;\n    ","import React from 'react';\nimport Sarah from '../../images/gravatar.JPG';\nimport \"./Bio.css\";\nimport Icon from 'react-simple-icons';\nimport ContactInfo from \"../ContactInfo/ContactInfo\";\n\nclass Bio extends React.Component{\n    render(){\n        return(\n            <div className=\"Bio\">\n                <span className=\"bioImageBackground\">\n                    <div id=\"outerbox\">\n                        <div id=\"innerbox\">\n                            <img\n                            src={Sarah}\n                            alt=\"Sarah Cheatham\"\n                            id=\"bioImage\"\n                            />\n                        </div>\n                    </div>\n                </span>\n                <span className=\"bioInfo\">\n                    <div id=\"name\">Sarah Cheatham</div>\n                    <div id=\"title\">Full Stack JavaScript Web Developer</div>\n                    <div id=\"stack\">MERN Stack</div>\n                    <ContactInfo/>\n                </span>\n                <span className=\"icons\">\n                    <a href=\"https://www.linkedin.com/in/sarahcheatham14/\">\n                        <Icon size={46} name='linkedin' fill=\"#0077B5\"/>\n                    </a>\n                    <a href=\"https://github.com/sarahcheatham\">\n                        <Icon size={46} name='github' fill=\"#181717\" />\n                    </a>\n                    <a href=\"mailto:sarah.cheatham14@gmail.com\">\n                        <svg height={46} width={46} role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><title>Gmail icon</title><path fill=\"#D14836\" d=\"M24 4.5v15c0 .85-.65 1.5-1.5 1.5H21V7.387l-9 6.463-9-6.463V21H1.5C.649 21 0 20.35 0 19.5v-15c0-.425.162-.8.431-1.068C.7 3.16 1.076 3 1.5 3H2l10 7.25L22 3h.5c.425 0 .8.162 1.069.432.27.268.431.643.431 1.068z\"/></svg>\n                    </a>\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default Bio;","import React from 'react';\nimport \"./Projects.css\";\n\nclass ProjectHeader extends React.Component{\n    render(){\n        return(\n            <div className=\"workcontainer\">\n                <div id=\"yellowBar\"></div>\n                <h1 id=\"projectsH1\">projects.</h1>\n            </div>\n        );\n    }\n}\n\nexport default ProjectHeader;","import React from 'react';\nimport \"./Projects.css\";\nimport arraynge from '../../images/arraynge.png';\n\nclass Arraynge extends React.Component{\n    render(){\n        return(\n            <div className=\"arraynge\">\n                <h2 className=\"arrayngeHeader\"><a href=\"http://arraynge.herokuapp.com\">Arraynge</a></h2>\n                <img\n                    src={arraynge}\n                    alt=\"arraynge\"\n                    id=\"arrayngeimg\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default Arraynge;","import React from 'react';\nimport \"./Projects.css\";\nimport method from '../../images/method.png';\n\nclass JSCheats extends React.Component{\n    render(){\n        return(\n            <div className=\"jscheats\">\n               <h2 className=\"jscheatsHeader\"><a href=\"https://js-cheats.now.sh\">JS Cheats</a></h2>\n               <img\n                    src={method}\n                    alt=\"JS Cheats\"\n                    id=\"jscheatsimg\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default JSCheats;","import React from 'react';\nimport \"./Projects.css\";\nimport todolist from '../../images/todolist.png';\n\nclass TodoList extends React.Component{\n    render(){\n        return(\n            <div className=\"todolist\">\n               <h2 className=\"todolistHeader\"><a href=\"https://sarahcheatham.github.io/todo/\">To Do List</a></h2>\n               <img\n                    src={todolist}\n                    alt=\"todolist\"\n                    id=\"todolistimg\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default TodoList;","import React from 'react';\nimport \"./Projects.css\";\nimport Arraynge from './Arraynge';\nimport JSCheats from './JSCheats';\nimport TodoList from './TodoList';\n\nclass Projects extends React.Component{\n    render(){\n        return(\n            <div className=\"projects\">\n               <Arraynge/>\n               <JSCheats/>\n               <TodoList/>\n            </div>\n        );\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport Bio from './components/Bio/Bio';\nimport ProjectsHeader from \"./components/Projects/ProjectsHeader\";\nimport Projects from './components/Projects/Projects';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Bio/>\n        <ProjectsHeader/>\n        <Projects/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}